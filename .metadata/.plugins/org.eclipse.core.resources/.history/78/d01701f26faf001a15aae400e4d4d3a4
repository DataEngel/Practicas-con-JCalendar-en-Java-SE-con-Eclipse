package com.tesji.view;

import java.awt.BorderLayout;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import com.toedter.calendar.JDateChooser;
import javax.swing.JLabel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import java.awt.event.ActionListener;
import com.edad.model.Model;
import javax.swing.JOptionPane;
import java.util.Calendar;
import java.util.Date;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.Font;

public class CalendarView extends JFrame {

	private JPanel contentPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					CalendarView frame = new CalendarView();  
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}   
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public CalendarView() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 450, 300);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel lblUno = new JLabel("Calcular edad");
		lblUno.setBounds(170, 10, 94, 24);
		contentPane.add(lblUno);
		
		JLabel lbl2 = new JLabel("Seleccione la fecha de nacimiento");
		lbl2.setBounds(122, 44, 222, 21);
		contentPane.add(lbl2);
		
		JButton btnSalir = new JButton("Salir");
		btnSalir.setBounds(10, 232, 85, 21);
		contentPane.add(btnSalir);
		
		JButton btnNuevo = new JButton("Nuevo");
		btnNuevo.setBounds(158, 232, 85, 21);
		contentPane.add(btnNuevo);
		
		JButton btnCalcular = new JButton("Calcular");
		btnCalcular.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				try {
					model.dias_nacimiento = dc_nacimiento.getCalendar().get(Calendar.DAY_OF_MONTH);
					model.dias_actual = dc_actual.getCalendar().get(Calendar.DAY_OF_MONTH);
					model.mes_nacimiento = dc_nacimiento.getCalendar().get(Calendar.MONTH) + 1;
					model.mes_actual = dc_actual.getCalendar().get(Calendar.MONTH) + 1;
					model.anio_nacimiento = dc_nacimiento.getCalendar().get(Calendar.YEAR);
					model.anio_actual = dc_actual.getCalendar().get(Calendar.YEAR);

					Date fechaActual = dc_actual.getDate();
					Date fechaNacimiento = dc_nacimiento.getDate();

					if (fechaNacimiento.compareTo(fechaActual) == -1) {
						model.dias = (int) (((fechaActual.getTime()-fechaNacimiento.getTime()))/(1000*60*60*24)+1);
						txtResultado.setText(model.total());
					} else {
						JOptionPane.showMessageDialog(null, "Agregue nuevamente la fecha");
					}

				} catch (Exception ex) {
					JOptionPane.showMessageDialog(null, "Agrege correctamente la fecha");

				}
			}
		});
		btnCalcular.setBounds(316, 232, 85, 21);
		contentPane.add(btnCalcular);
		
		JDateChooser dateChooser = new JDateChooser();
		dateChooser.setBounds(10, 91, 174, 24);
		contentPane.add(dateChooser);
		
		JDateChooser dateChooser_1 = new JDateChooser(); 
		dateChooser_1.setBounds(10, 138, 175, 24);
		contentPane.add(dateChooser_1);
		
		JTextArea textArea = new JTextArea();
		textArea.setBounds(216, 93, 210, 76);
		contentPane.add(textArea);
	}
}
